package com.cmc.evaluacion.fase2.servicios;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.cmc.evaluacion.fase2.entidades.Cartera;
import com.cmc.evaluacion.fase2.entidades.Cliente;
import com.cmc.excepciones.EvaluacionException;

public class AdminClientes {
	
	private static Logger logger = LogManager.getLogger(AdminClientes.class);
	
	private static void armarCliente(String linea, Cartera cartera) {
		String [] partes = linea.split(",");
		try {
			Cliente c = new Cliente(partes[0], partes[1], partes[2]);
			cartera.getClientes().add(c);
		} catch (Exception e) {
			logger.error("error al armar cliente en la linea:" + linea, e);
		}
		
		
	}
	
	public static Cartera armarCartera(String rutaArchivo) throws EvaluacionException {
		File file = new File(rutaArchivo);
		BufferedReader br = null;
		FileReader fileReader = null;
		Cartera cartera = new Cartera();
		String linea = "";
		try {
			fileReader = new FileReader(file);
			br = new BufferedReader(fileReader);
			while((linea = br.readLine()) != null) {
				armarCliente(linea, cartera);
			}
		} catch (FileNotFoundException e) {
			logger.error("No existe el archivo ", e);
			throw new EvaluacionException("No existe el archivo " + rutaArchivo);
		} catch (IOException e) {
			logger.error("Error al leer el archivo ", e);
			throw new EvaluacionException("No se pudo leer el archivo " + rutaArchivo);
		} finally {
			try {
				if(br != null){
					br.close();
				}
			} catch (Exception e) {
				logger.error("Error al cerrar el BufferedReader ", e);
			}
			try {
				if(fileReader != null) {  
					fileReader.close();				
				}
			} catch (Exception e) {
				logger.error("Error al cerrar el fileReader ", e);
			}
		}
		return cartera;
	}
}
